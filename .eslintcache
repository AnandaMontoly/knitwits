[{"/Users/emilyrhyu/knitwits/src/index.js":"1","/Users/emilyrhyu/knitwits/src/App.js":"2","/Users/emilyrhyu/knitwits/src/reportWebVitals.js":"3","/Users/emilyrhyu/knitwits/src/PatternSelectScreen.jsx":"4","/Users/emilyrhyu/knitwits/src/AboutUs.js":"5","/Users/emilyrhyu/knitwits/src/RowActionView.js":"6","/Users/emilyrhyu/knitwits/src/small-context.js":"7","/Users/emilyrhyu/knitwits/src/ToDo.js":"8"},{"size":500,"mtime":1611968423856,"results":"9","hashOfConfig":"10"},{"size":3050,"mtime":1612068107309,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611968423858,"results":"12","hashOfConfig":"10"},{"size":8564,"mtime":1612063647927,"results":"13","hashOfConfig":"10"},{"size":3793,"mtime":1612064159062,"results":"14","hashOfConfig":"10"},{"size":4661,"mtime":1612068107310,"results":"15","hashOfConfig":"10"},{"size":276,"mtime":1612063530711,"results":"16","hashOfConfig":"10"},{"size":1519,"mtime":1612063909698,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tdj0dv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/emilyrhyu/knitwits/src/index.js",[],"/Users/emilyrhyu/knitwits/src/App.js",["35","36","37"],"/Users/emilyrhyu/knitwits/src/reportWebVitals.js",[],"/Users/emilyrhyu/knitwits/src/PatternSelectScreen.jsx",[],"/Users/emilyrhyu/knitwits/src/AboutUs.js",["38"],"/Users/emilyrhyu/knitwits/src/RowActionView.js",["39","40","41","42","43"],"import './App.css';\nimport React, { createContext, useContext, Component } from 'react';\nimport { SmallContext } from './small-context.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\n\n/*async grabPattern = query => {\n    let response = await fetch(query, {method: 'GET', redirect: 'follow'});\n    if (response.ok) { // if HTTP-status is 200-299\n    // get the response body (the method explained below)\n    let json = await response.json();\n  } else {\n    alert(\"HTTP-Error: \" + response.status);\n  }};*/\nvar partArr = [''];\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      marginRight: theme.spacing(2),\n      minWidth: 120\n    }}));\n\n//const formCtrl = useStyles().formControl;\n\nclass RowActionView extends Component {\n    static contextType = SmallContext;\n    state = {\n        instructions: []\n      }\n    componentDidMount (){\n        let context = this.context;\n        var query = context.query;\n        console.log(query);\n        var queryVal = query.split(\"/\").pop();\n\n      fetch(query)\n      .then(res => res.json())\n      .then((data) =>{\n          this.setState({instructions:JSON.parse(data[queryVal].replaceAll(\"\\\\\\\\\", \"\\\\\")\n                      .replaceAll(\"/\", \"of\").replaceAll('\"rows\":1}', '\"rows\":1},')\n                      .replaceAll('\"rows\":1},,', '\"rows\":1},')\n                      .replaceAll('\"rows\":1},}', '\"rows\":1}}'))})\n        }\n      )\n    }\n    constructor(props) {\n        super(props);\n      }\n    render(){\n        var types = ['Legs that are Also Arms', 'Arms that are Also Legs'];\n        return(<Grid container spacing={3}>\n            <Grid item xs={12}>\n            </Grid>\n            <Grid item xs={6}>\n              <div >\n                <FormControl >\n                    <InputLabel id=\"partDropdownLabel\" htmlFor=\"partDropdown\"> Parts </InputLabel>\n                            <Select\n                                autoWidth\n                                labelId=\"partDropdownLabel\"\n                                id=\"partDropdown\"\n                                name=\"partDropdown\"\n                            >\n                                {types.map(type => (<option value={type}>{type}</option>))}\n                            </Select>\n                </FormControl>\n             </div>\n              <Counter />\n            </Grid>\n            <Grid item xs={6}>\n\n             {\n               JSON.stringify(this.state.instructions)\n               // Object.keys(this.state.instructions).map(item =>\n               //  <p><b>{item}</b></p> //{this.state.instructions[item][\"part\"]} {this.state.instructions[item][\"instructions\"]} {this.state.instructions[item][\"rows\"]}</p>\n               // )\n             }\n\n            </Grid>\n          </Grid>\n        );\n    }\n}\n\nclass Counter extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = { count: 0, left:''};\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    addClick = () => {\n      this.setState(({ count,left }) => ({\n        count: count + 1,\n        left: left -1\n      }));\n    };\n    minusClick = () => {\n      this.setState(({ count,left }) => ({\n        count: count - 1,\n        left: left +1\n      }));\n    };\n\n    handleChange(e) {\n      this.setState({ left: e.target.value });\n    }\n\n    handleSubmit(e) {\n      e.preventDefault();\n      document.getElementById(\"findnumrows\").style.display=\"none\";\n    }\n\n    render() {\n      const mystyle = {\n       display: \"inline-block\",\n       border: \"none\",\n        color: \"black\",\n        backgroundColor: \"gray\",\n        padding: \"15px 32px\",\n        margin: \"15px\",\n\n      };\n\n      return (\n      <div>\n         <form id=\"findnumrows\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"new-todo\">\n              Number of Rows?\n            </label>\n            <input\n              id=\"numRowinput\"\n              onChange={this.handleChange}\n              value={this.state.left}\n            />\n            <button type=\"submit\">Set Number of Rows </button>\n          </form>\n        <button style={mystyle} onClick={this.addClick}>+1</button>\n        <button style={mystyle} onClick={this.minusClick}>-1</button>\n        <p>Rows Completed: {this.state.count}</p>\n        <p>Rows Left: {this.state.left}</p>\n      </div>\n      )\n    }\n  }\n\nexport default RowActionView;\n","/Users/emilyrhyu/knitwits/src/small-context.js",[],"/Users/emilyrhyu/knitwits/src/ToDo.js",["44","45"],{"ruleId":"46","severity":1,"message":"47","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":19},{"ruleId":"46","severity":1,"message":"50","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":58,"column":10,"nodeType":"53","endLine":58,"endColumn":40},{"ruleId":"46","severity":1,"message":"54","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":14},{"ruleId":"46","severity":1,"message":"55","line":2,"column":17,"nodeType":"48","messageId":"49","endLine":2,"endColumn":30},{"ruleId":"46","severity":1,"message":"56","line":2,"column":32,"nodeType":"48","messageId":"49","endLine":2,"endColumn":42},{"ruleId":"46","severity":1,"message":"57","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":20},{"ruleId":"46","severity":1,"message":"58","line":15,"column":5,"nodeType":"48","messageId":"49","endLine":15,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":43,"column":5,"nodeType":"61","messageId":"62","endLine":45,"endColumn":8},{"ruleId":"46","severity":1,"message":"55","line":2,"column":17,"nodeType":"48","messageId":"49","endLine":2,"endColumn":30},{"ruleId":"46","severity":1,"message":"56","line":2,"column":32,"nodeType":"48","messageId":"49","endLine":2,"endColumn":42},"no-unused-vars","'Breadcrumbs' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'makeStyles' is defined but never used.","'partArr' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]