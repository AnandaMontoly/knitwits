[{"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js":"1","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js":"2","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js":"3","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js":"4","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js":"5","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx":"6","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js":"7","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\ToDo.js":"8"},{"size":517,"mtime":1611974650487,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611974650488,"results":"11","hashOfConfig":"10"},{"size":3421,"mtime":1612071745663,"results":"12","hashOfConfig":"10"},{"size":3907,"mtime":1612069196833,"results":"13","hashOfConfig":"10"},{"size":5399,"mtime":1612069155694,"results":"14","hashOfConfig":"10"},{"size":9099,"mtime":1612071656478,"results":"15","hashOfConfig":"10"},{"size":287,"mtime":1612064280887,"results":"16","hashOfConfig":"10"},{"size":1587,"mtime":1612064280877,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rhky8p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js",[],["38","39"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js",["40","41","42"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js",["43"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\n\r\nclass AboutUs extends Component{ \r\n  \r\n  render() {\r\n    \r\n      return (\r\n        <div>\r\n           <Container>\r\n          <h2>About Us</h2>\r\n          <p>Our names are Emily, Sarah, and Ananda and we are the Low Key Influencers! We\r\n            made this project KnitWits as a nod to a hobby all three of us have leaned on during \r\n            quarantine, crocheting and knitting.\r\n          </p>\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n            \r\n             <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\" }} image={'emily.jpg'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Emily\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and French Major \r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '21\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Crocheting Amigurumis!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n          <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\" }} image={'ananda.jpg'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Ananda\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and SDS Major\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '22\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Knitting for Friends!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n          <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\"}} image={'sarah.PNG'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Sarah\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and Classics Major\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '20\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Knitting Complex Math Patterns!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n            </Grid>\r\n          </Grid>\r\n          </Container>\r\n       </div>\r\n\r\n    );\r\n  }\r\n}\r\n  \r\n\r\n  \r\n  \r\n  export default AboutUs;","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js",["44","45","46","47","48"],"import './App.css';\r\nimport React, { createContext, useContext, Component } from 'react';\r\nimport { SmallContext } from './small-context.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n/*async grabPattern = query => {\r\n    let response = await fetch(query, {method: 'GET', redirect: 'follow'});\r\n    if (response.ok) { // if HTTP-status is 200-299\r\n    // get the response body (the method explained below)\r\n    let json = await response.json();\r\n  } else {\r\n    alert(\"HTTP-Error: \" + response.status);\r\n  }};*/\r\nvar partArr = [''];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      marginRight: theme.spacing(2),\r\n      minWidth: 120\r\n    }}));\r\n\r\n//const formCtrl = useStyles().formControl;\r\n\r\nclass RowActionView extends Component {\r\n    static contextType = SmallContext;\r\n    state = {\r\n        instructions: [],\r\n        query:\"\",\r\n        current:0\r\n      }\r\n    componentDidMount (){\r\n        let context = this.context;\r\n        var query = context.query;\r\n        console.log(query);\r\n        var queryVal = query.split(\"/\").pop();\r\n        this.setState({query:query})\r\n\r\n      fetch(query)\r\n      .then(res => res.json())\r\n      .then((data) =>{\r\n          this.setState({instructions:JSON.parse(data[queryVal].replaceAll(\"\\\\\\\\\", \"\\\\\")\r\n                      .replaceAll(\"/\", \"of\").replaceAll('\"rows\":1}', '\"rows\":1},')\r\n                      .replaceAll('\"rows\":1},,', '\"rows\":1},')\r\n                      .replaceAll('\"rows\":1},}', '\"rows\":1}}'))})\r\n        }\r\n      )\r\n    }\r\n    updateCurrent(newNum){\r\n      this.setState({current: newNum})\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateCurrent = this.updateCurrent.bind(this)\r\n      }\r\n    render(){\r\n        var types = ['Legs that are Also Arms', 'Arms that are Also Legs'];\r\n        return(<Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div >\r\n                <FormControl >\r\n                    <InputLabel id=\"partDropdownLabel\" htmlFor=\"partDropdown\"> Parts </InputLabel>\r\n                            <Select\r\n                                autoWidth\r\n                                labelId=\"partDropdownLabel\"\r\n                                id=\"partDropdown\"\r\n                                name=\"partDropdown\"\r\n                            >\r\n                                {types.map(type => (<option value={type}>{type}</option>))}\r\n                            </Select>\r\n                </FormControl>\r\n             </div>\r\n              <Counter updateCurrent={this.updateCurrent}/>\r\n              <b>Current instruction</b><br />\r\n              {\r\n                this.state.current>=0 ? JSON.stringify(this.state.instructions[this.state.current]) : \"Out of range\"\r\n              }\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n\r\n            <a target=\"_blank\" href={this.state.query.replace(\"get\", \"pdf\")}>Printer friendly version</a>\r\n\r\n             {\r\n               Object.keys(this.state.instructions).map(item =>\r\n                <p><b>{item}</b> {this.state.instructions[item][\"part\"]} {this.state.instructions[item][\"instructions\"]} {this.state.instructions[item][\"rows\"]}</p>\r\n               )\r\n             }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { count: 0, left:''};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    addClick = () => {\r\n      this.setState(({ count,left }) => ({\r\n        count: count + 1,\r\n        left: left -1\r\n      }));\r\n      this.props.updateCurrent(this.state.count);\r\n    };\r\n    minusClick = () => {\r\n      this.setState(({ count,left }) => ({\r\n        count: count - 1,\r\n        left: left +1\r\n      }));\r\n      this.props.updateCurrent(this.state.count);\r\n    };\r\n\r\n    handleChange(e) {\r\n      this.setState({ left: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      document.getElementById(\"findnumrows\").style.display=\"none\";\r\n    }\r\n\r\n    render() {\r\n      const mystyle = {\r\n       display: \"inline-block\",\r\n       border: \"none\",\r\n        color: \"black\",\r\n        backgroundColor: \"gray\",\r\n        padding: \"15px 32px\",\r\n        margin: \"15px\",\r\n\r\n      };\r\n\r\n      return (\r\n      <div>\r\n         <form id=\"findnumrows\" onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"new-todo\">\r\n              Number of Rows?\r\n            </label>\r\n            <input\r\n              id=\"numRowinput\"\r\n              onChange={this.handleChange}\r\n              value={this.state.left}\r\n            />\r\n            <button type=\"submit\">Set Number of Rows </button>\r\n          </form>\r\n        <button style={mystyle} onClick={this.addClick}>+1</button>\r\n        <button style={mystyle} onClick={this.minusClick}>-1</button>\r\n        <p>Rows Completed: {this.state.count}</p>\r\n        <p>Rows Left: {this.state.left}</p>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default RowActionView;\r\n","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\ToDo.js",["49","50"],"import './App.css';\r\nimport React, { createContext, useContext, Component } from 'react';\r\n\r\n\r\n\r\nclass TodoApp extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Steps to Do</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n\r\n            <label htmlFor=\"new-todo\">\r\n              What needs to be done?\r\n            </label>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button>\r\n              Add #{this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  class TodoList extends Component {\r\n    render() {\r\n      return (\r\n        <ul>\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TodoApp;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":19},{"ruleId":"55","severity":1,"message":"59","line":8,"column":8,"nodeType":"57","messageId":"58","endLine":8,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":66,"column":10,"nodeType":"62","endLine":66,"endColumn":40},{"ruleId":"55","severity":1,"message":"63","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":14},{"ruleId":"55","severity":1,"message":"64","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":30},{"ruleId":"55","severity":1,"message":"65","line":2,"column":32,"nodeType":"57","messageId":"58","endLine":2,"endColumn":42},{"ruleId":"55","severity":1,"message":"66","line":18,"column":5,"nodeType":"57","messageId":"58","endLine":18,"endColumn":12},{"ruleId":"55","severity":1,"message":"67","line":19,"column":7,"nodeType":"57","messageId":"58","endLine":19,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":87,"column":13,"nodeType":"62","endLine":87,"endColumn":78},{"ruleId":"55","severity":1,"message":"64","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":30},{"ruleId":"55","severity":1,"message":"65","line":2,"column":32,"nodeType":"57","messageId":"58","endLine":2,"endColumn":42},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Breadcrumbs' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'partArr' is assigned a value but never used.","'useStyles' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]