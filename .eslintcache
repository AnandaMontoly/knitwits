[{"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js":"1","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js":"2","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js":"3","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js":"4","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js":"5","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx":"6","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js":"7","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\ToDo.js":"8"},{"size":517,"mtime":1611974650487,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611974650488,"results":"11","hashOfConfig":"10"},{"size":3152,"mtime":1612065731573,"results":"12","hashOfConfig":"10"},{"size":3921,"mtime":1612062412751,"results":"13","hashOfConfig":"10"},{"size":4813,"mtime":1612066326640,"results":"14","hashOfConfig":"10"},{"size":8850,"mtime":1612064280859,"results":"15","hashOfConfig":"10"},{"size":287,"mtime":1612064280887,"results":"16","hashOfConfig":"10"},{"size":1587,"mtime":1612064280877,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rhky8p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js",[],["38","39"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js",["40","41","42"],"//import logo from './logo.svg';\r\nimport './App.css';\r\nimport PatternSelectScreen from './PatternSelectScreen.jsx';\r\nimport RowActionView from './RowActionView.js';\r\nimport { SmallContext } from './small-context.js';\r\nimport React, { Component } from 'react';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport AboutUs from './AboutUs.js';\r\nimport TodoApp from './ToDo.js';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={patternPicked: false, custom: false, chosenPattern: '', // haha. beefault\r\n    decideScarf: this.decideScarf.bind(this),\r\n    decideBee: this.decideBee.bind(this),\r\n    decidePlushie: this.decidePlushie.bind(this),\r\n    customPattern: this.customPattern.bind(this),\r\n    query:''};\r\n  }\r\n\r\n  decideScarf(){\r\n    this.setState({patternPicked: true, chosenPattern: 'scarf',\r\n    query:'https://knitwits.ue.r.appspot.com/api/get/-7269468165908292738'});\r\n    console.log(\"scarf!\");\r\n  }\r\n\r\n  decideBee(){\r\n    this.setState({patternPicked: true, chosenPattern: 'bee',\r\n    query:'https://knitwits.ue.r.appspot.com/api/get/-7378964869400283023'});\r\n    console.log(\"bee!\");\r\n  }\r\n\r\n  decidePlushie(){\r\n    this.setState({patternPicked: true, chosenPattern: 'plushie',\r\n    query:'https://knitwits.ue.r.appspot.com/api/get/-4778850897406943288'});\r\n    console.log(\"plushie!\");\r\n  }\r\n\r\n  customPattern(){\r\n    this.setState({patternPicked: true, custom: true})\r\n  }\r\n\r\n  render(){\r\n    const picked = this.state.patternPicked;\r\n    const isCustom = this.state.custom;\r\n    let view;\r\n    view = (<PatternSelectScreen/>);\r\n    if (picked) {view = (<RowActionView/>);}\r\n    if (picked && isCustom) {view= (<TodoApp/>);}\r\n\r\n    return (\r\n      // <div className=\"App\" style={{backgroundColor:\"wheat\", color:\"#404022\"}}>\r\n      <div className=\"App\" style={{backgroundColor:\"whitesmoke\", color:\"#404022\"}}>\r\n        <header className=\"App-header\">\r\n         <h1> KnitWits </h1>\r\n         <img src={'./IMG_0069.png'} />\r\n         <SmallContext.Provider>\r\n           {/* <Breadcrumb1 /> */}\r\n         </SmallContext.Provider>\r\n        </header>\r\n        <SmallContext.Provider value={this.state}>\r\n          {view}\r\n        </SmallContext.Provider>\r\n        <AboutUs />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\n// function handleClick(event) {\r\n//   event.preventDefault();\r\n//   console.info('You clicked a breadcrumb.');\r\n// }\r\n\r\n// class Breadcrumb1 extends Component {\r\n//   static contextType = SmallContext;\r\n//   render() {\r\n//      let context = this.context;\r\n//   return (\r\n//     <Breadcrumbs aria-label=\"breadcrumb\">\r\n//       <Link color=\"inherit\" href=\"/\" onClick={context.whateverFn()}>\r\n//         Home\r\n//       </Link>\r\n//       {/* <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n//         Core\r\n//       </Link> */}\r\n//       <Link\r\n//         color=\"textPrimary\"\r\n//         href=\"/components/breadcrumbs/\"\r\n//         onClick={handleClick}\r\n//         aria-current=\"page\"\r\n//       >\r\n//         Crochet Bee\r\n//       </Link>\r\n//     </Breadcrumbs>\r\n//   );\r\n// }\r\n// }\r\n\r\nexport default App;\r\n","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js",["43"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\n\r\nclass AboutUs extends Component{ \r\n  \r\n  render() {\r\n    \r\n      return (\r\n        <div>\r\n           <Container>\r\n          <h2>About Us</h2>\r\n          <p>Our names are Emily, Sarah, and Ananda and we are the Low Key Influencers! We\r\n            made this project KnitWits as a nod to a hobby all three of us have leaned on during \r\n            quarantine, crocheting and knitting.\r\n          </p>\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n            \r\n             <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\" }} image={'emily.jpg'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Emily\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and French Major \r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '21\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Crocheting Amigurumis!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n          <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\" }} image={'ananda.jpg'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Ananda\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and Statistical and Data Sciences\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '22\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Knitting for Friends!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n          <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\"}} image={'sarah.PNG'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Sarah\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and Classics\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '20\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Knitting Complex Math Patterns!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n            </Grid>\r\n          </Grid>\r\n          </Container>\r\n       </div>\r\n\r\n    );\r\n  }\r\n}\r\n  \r\n\r\n  \r\n  \r\n  export default AboutUs;","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js",["44","45","46","47","48"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\ToDo.js",["49","50"],"import './App.css';\r\nimport React, { createContext, useContext, Component } from 'react';\r\n\r\n\r\n\r\nclass TodoApp extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Steps to Do</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n\r\n            <label htmlFor=\"new-todo\">\r\n              What needs to be done?\r\n            </label>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button>\r\n              Add #{this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  class TodoList extends Component {\r\n    render() {\r\n      return (\r\n        <ul>\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TodoApp;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":19},{"ruleId":"55","severity":1,"message":"59","line":8,"column":8,"nodeType":"57","messageId":"58","endLine":8,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":58,"column":10,"nodeType":"62","endLine":58,"endColumn":40},{"ruleId":"55","severity":1,"message":"63","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":14},{"ruleId":"55","severity":1,"message":"64","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":30},{"ruleId":"55","severity":1,"message":"65","line":2,"column":32,"nodeType":"57","messageId":"58","endLine":2,"endColumn":42},{"ruleId":"55","severity":1,"message":"66","line":18,"column":5,"nodeType":"57","messageId":"58","endLine":18,"endColumn":12},{"ruleId":"55","severity":1,"message":"67","line":19,"column":7,"nodeType":"57","messageId":"58","endLine":19,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":50,"column":5,"nodeType":"70","messageId":"71","endLine":52,"endColumn":8},{"ruleId":"55","severity":1,"message":"64","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":30},{"ruleId":"55","severity":1,"message":"65","line":2,"column":32,"nodeType":"57","messageId":"58","endLine":2,"endColumn":42},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Breadcrumbs' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'partArr' is assigned a value but never used.","'useStyles' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]