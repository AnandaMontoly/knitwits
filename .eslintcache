[{"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js":"1","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js":"2","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js":"3","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js":"4","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js":"5","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx":"6","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js":"7","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\ToDo.js":"8"},{"size":517,"mtime":1611974650487,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611974650488,"results":"11","hashOfConfig":"10"},{"size":3152,"mtime":1612065731573,"results":"12","hashOfConfig":"10"},{"size":3921,"mtime":1612062412751,"results":"13","hashOfConfig":"10"},{"size":5022,"mtime":1612065706713,"results":"14","hashOfConfig":"10"},{"size":8850,"mtime":1612064280859,"results":"15","hashOfConfig":"10"},{"size":287,"mtime":1612064280887,"results":"16","hashOfConfig":"10"},{"size":1587,"mtime":1612064280877,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rhky8p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js",[],["38","39"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js",["40","41","42"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js",["43"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\n\r\nclass AboutUs extends Component{ \r\n  \r\n  render() {\r\n    \r\n      return (\r\n        <div>\r\n           <Container>\r\n          <h2>About Us</h2>\r\n          <p>Our names are Emily, Sarah, and Ananda and we are the Low Key Influencers! We\r\n            made this project KnitWits as a nod to a hobby all three of us have leaned on during \r\n            quarantine, crocheting and knitting.\r\n          </p>\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n            \r\n             <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\" }} image={'emily.jpg'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Emily\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and French Major \r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '21\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Crocheting Amigurumis!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n          <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\" }} image={'ananda.jpg'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Ananda\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and Statistical and Data Sciences\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '22\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Knitting for Friends!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n          <Card\r\n            style={{\r\n              maxWidth: 345,\r\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n              backgroundColor: \"#fafafa\",\r\n            }}\r\n          >\r\n            <CardMedia style={{ height: \"300px\"}} image={'sarah.PNG'} />\r\n            <CardContent>\r\n              <Typography component=\"h3\">\r\n                Sarah\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Computer Science and Classics\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Smith College '20\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Hobbies: Knitting Complex Math Patterns!\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n            </Grid>\r\n          </Grid>\r\n          </Container>\r\n       </div>\r\n\r\n    );\r\n  }\r\n}\r\n  \r\n\r\n  \r\n  \r\n  export default AboutUs;","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js",["44"],"import './App.css';\r\nimport React, { createContext, useContext, Component } from 'react';\r\nimport { SmallContext } from './small-context.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n/*async grabPattern = query => {\r\n    let response = await fetch(query, {method: 'GET', redirect: 'follow'});\r\n    if (response.ok) { // if HTTP-status is 200-299\r\n    // get the response body (the method explained below)\r\n    let json = await response.json();\r\n  } else {\r\n    alert(\"HTTP-Error: \" + response.status);\r\n  }};*/\r\nvar partArr = [''];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      marginRight: theme.spacing(2),\r\n      minWidth: 120\r\n    }}));\r\n\r\n//const formCtrl = useStyles().formControl;\r\n\r\nclass RowActionView extends Component {\r\n    static contextType = SmallContext;  \r\n    state = {\r\n        instructions: [],\r\n        currentTicker:0\r\n      }\r\n    updateParentCount(newCount) {\r\n      this.setState({currentTicker: newCount})\r\n    }\r\n    componentDidMount (){\r\n        let context = this.context;\r\n        var query = context.query;\r\n        console.log(query);\r\n       var query_code = query.split(\"/\").pop();\r\n\r\n      fetch(query)\r\n      .then(res => res.json())\r\n      .then((data) =>{\r\n          var enterVal = data[query_code]\r\n          enterVal = enterVal.replaceAll(\"\\\\\\\\\", \"\\\\\").replaceAll(\"/\", \"of\").replaceAll('\"rows\":1}', '\"rows\":1},').replaceAll('\"rows\":1},,', '\"rows\":1},').replace(/[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g, \"\").replaceAll('\"rows\":1},}', '\"rows\":1}}'));\r\n\r\n          console.log(enterVal)\r\n        }\r\n      )\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n    render(){\r\n        var types = ['Legs that are Also Arms', 'Arms that are Also Legs'];\r\n        return(<Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div >\r\n                <FormControl >\r\n                    <InputLabel id=\"partDropdownLabel\" htmlFor=\"partDropdown\"> Parts </InputLabel>\r\n                            <Select\r\n                                autoWidth\r\n                                labelId=\"partDropdownLabel\"\r\n                                id=\"partDropdown\"\r\n                                name=\"partDropdown\"\r\n                            >\r\n                                {types.map(type => (<option value={type}>{type}</option>))}\r\n                            </Select>\r\n                </FormControl>\r\n             </div>\r\n              <Counter />\r\n              <p>Current instructions are {this.state.instructions[1]}</p>\r\n\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n             {\r\n               Object.keys(this.state.instructions).map(item =>\r\n                <p><b>{item}</b> {this.state.instructions[item][\"part\"]} {this.state.instructions[item][\"instructions\"]} {this.state.instructions[item][\"rows\"]}</p>\r\n               )\r\n             }\r\n\r\n            </Grid>\r\n          </Grid>);\r\n    }\r\n}\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { count: 0, left:''};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    addClick = () => {\r\n      this.setState(({ count,left }) => ({\r\n        count: count + 1,\r\n        left: left -1\r\n      }));\r\n    };\r\n    minusClick = () => {\r\n      this.setState(({ count,left }) => ({\r\n        count: count - 1,\r\n        left: left +1\r\n      }));\r\n    };\r\n\r\n    handleChange(e) {\r\n      this.setState({ left: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      document.getElementById(\"findnumrows\").style.display=\"none\";\r\n    }\r\n\r\n    render() {\r\n      const mystyle = {\r\n       display: \"inline-block\",\r\n       border: \"none\",\r\n        color: \"black\",\r\n        backgroundColor: \"gray\",\r\n        padding: \"15px 32px\",\r\n        margin: \"15px\",\r\n\r\n      };\r\n\r\n      return (\r\n      <div>\r\n         <form id=\"findnumrows\" onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"new-todo\">\r\n              Number of Rows?\r\n            </label>\r\n            <input\r\n              id=\"numRowinput\"\r\n              onChange={this.handleChange}\r\n              value={this.state.left}\r\n            />\r\n            <button type=\"submit\">Set Number of Rows </button>\r\n          </form>\r\n        <button style={mystyle} onClick={this.addClick}>+1</button>\r\n        <button style={mystyle} onClick={this.minusClick}>-1</button>\r\n        <p>Rows Completed: {this.state.count}</p>\r\n        <p>Rows Left: {this.state.left}</p>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default RowActionView;\r\n","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\ToDo.js",["45","46"],"import './App.css';\r\nimport React, { createContext, useContext, Component } from 'react';\r\n\r\n\r\n\r\nclass TodoApp extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Steps to Do</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n\r\n            <label htmlFor=\"new-todo\">\r\n              What needs to be done?\r\n            </label>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button>\r\n              Add #{this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  class TodoList extends Component {\r\n    render() {\r\n      return (\r\n        <ul>\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TodoApp;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":19},{"ruleId":"51","severity":1,"message":"55","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":58,"column":10,"nodeType":"58","endLine":58,"endColumn":40},{"ruleId":"51","severity":1,"message":"59","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"60","line":37,"column":315},{"ruleId":"51","severity":1,"message":"61","line":2,"column":17,"nodeType":"53","messageId":"54","endLine":2,"endColumn":30},{"ruleId":"51","severity":1,"message":"62","line":2,"column":32,"nodeType":"53","messageId":"54","endLine":2,"endColumn":42},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Breadcrumbs' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 35 | \u001b[39m      \u001b[33m.\u001b[39mthen((data) \u001b[33m=>\u001b[39m{\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m          \u001b[36mvar\u001b[39m enterVal \u001b[33m=\u001b[39m data[query_code]\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 | \u001b[39m          enterVal \u001b[33m=\u001b[39m enterVal\u001b[33m.\u001b[39mreplaceAll(\u001b[32m\"\\\\\\\\\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"\\\\\"\u001b[39m)\u001b[33m.\u001b[39mreplaceAll(\u001b[32m\"/\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"of\"\u001b[39m)\u001b[33m.\u001b[39mreplaceAll(\u001b[32m'\"rows\":1}'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'\"rows\":1},'\u001b[39m)\u001b[33m.\u001b[39mreplaceAll(\u001b[32m'\"rows\":1},,'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'\"rows\":1},'\u001b[39m)\u001b[33m.\u001b[39mreplace(\u001b[35m/[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"\"\u001b[39m)\u001b[33m.\u001b[39mreplaceAll(\u001b[32m'\"rows\":1},}'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'\"rows\":1}}'\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                                                                                                                                                                                                                                                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 39 | \u001b[39m          console\u001b[33m.\u001b[39mlog(enterVal)\u001b[0m\n\u001b[0m \u001b[90m 40 | \u001b[39m        }\u001b[0m","'createContext' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]
