[{"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js":"1","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js":"2","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js":"3","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js":"4","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js":"5","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx":"6","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js":"7"},{"size":517,"mtime":1611974650487,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1611974650488,"results":"10","hashOfConfig":"9"},{"size":2481,"mtime":1612060119565,"results":"11","hashOfConfig":"9"},{"size":221,"mtime":1612027655776,"results":"12","hashOfConfig":"9"},{"size":6863,"mtime":1612060119595,"results":"13","hashOfConfig":"9"},{"size":8884,"mtime":1612060194401,"results":"14","hashOfConfig":"9"},{"size":4374,"mtime":1612060119550,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"rhky8p",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\index.js",[],["32","33"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\reportWebVitals.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\App.js",["34","35","36"],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\small-context.js",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\RowActionView.js",["37","38","39","40","41"],"import './App.css';\r\nimport React, { createContext, Component } from 'react';\r\nimport { SmallContext } from './small-context.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst MyContext = React.createContext();\r\n\r\n/*async grabPattern = query => {\r\n    let response = await fetch(query, {method: 'GET', redirect: 'follow'});\r\n    if (response.ok) { // if HTTP-status is 200-299\r\n    // get the response body (the method explained below)\r\n    let json = await response.json();\r\n  } else {\r\n    alert(\"HTTP-Error: \" + response.status);\r\n  }};*/\r\nvar partArr = [''];\r\n\r\nclass RowActionView extends Component {\r\n    state = {\r\n      instructions: []\r\n    }\r\n    // setCharAt(str,index,chr) {\r\n    //   if(index > str.length-1) return str;\r\n    //   return str.substring(0,index) + chr + str.substring(index+1);\r\n    // }\r\n\r\n    componentDidMount (){\r\n      var query = '';\r\n      switch(MyContext.chosenPattern){\r\n          case 'scarf':\r\n          query = 'https://knitwits.ue.r.appspot.com/api/get/-193436168588079716'\r\n          break;\r\n      case 'bee':\r\n          query = 'https://knitwits.ue.r.appspot.com/api/get/-7378964869400283023'\r\n          break;\r\n      case 'plushie':\r\n          query = 'https://knitwits.ue.r.appspot.com/api/get/-4778850897406943288'\r\n          break;\r\n      default:\r\n          console.log(\"no query\")\r\n          query = 'https://knitwits.ue.r.appspot.com/api/get/-4778850897406943288'\r\n      }\r\n<<<<<<< HEAD\r\n      var queryVal;\r\n      queryVal = query.split(\"/\").pop()\r\n\r\n      fetch(query)\r\n      .then(res => res.json())\r\n      .then((data) =>{\r\n          this.setState({instructions:JSON.parse(data[queryVal].replaceAll(\"\\\\\\\\\", \"\\\\\")\r\n                      .replaceAll(\"/\", \"of\").replaceAll('\"rows\":1}', '\"rows\":1},')\r\n                      .replaceAll('\"rows\":1},,', '\"rows\":1},')\r\n                      .replaceAll('\"rows\":1},}', '\"rows\":1}}'))})\r\n        }\r\n      )\r\n=======\r\n\r\n      var query_code = query.split(\"/\").pop();\r\n      var xhr = new XMLHttpRequest();\r\n      var json_obj, status = false;\r\n      xhr.open(\"GET\", query, true);\r\n      xhr.onload = function (e) {\r\n          if (xhr.readyState === 4) {\r\n            if (xhr.status === 200) {\r\n              var json_obj = JSON.parse(xhr.responseText);\r\n              var pattern = json_obj[query_code];\r\n              console.log(pattern);\r\n              var same = '';              \r\n              for (const n in pattern){\r\n                // console.log(n[\"part\"]);\r\n                if (pattern[n][\"part\"] !== same){\r\n                    partArr.push(n[\"part\"]);\r\n                    same = n[\"part\"];\r\n                }\r\n              }\r\n              console.log(partArr);\r\n              status = true;\r\n            } else {\r\n              console.error(xhr.statusText);\r\n            }\r\n          }\r\n        }.bind(this);\r\n        xhr.onerror = function (e) {\r\n          console.error(xhr.statusText);\r\n        };\r\n        xhr.send(null);\r\n\r\n>>>>>>> 33653d47c0adecb29ed07c1bea11c63c04c940df\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n    render(){\r\n\r\n        return(<Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Counter />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n             <TodoApp />\r\n             {\r\n               Object.keys(this.state.instructions).map(item =>\r\n                <p><b>{item}</b> {this.state.instructions[item][\"part\"]} {this.state.instructions[item][\"instructions\"]} {this.state.instructions[item][\"rows\"]}</p>\r\n               )\r\n             }\r\n\r\n            </Grid>\r\n          </Grid>);\r\n    }\r\n}\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { count: 0, left:''};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    addClick = () => {\r\n      this.setState(({ count,left }) => ({\r\n        count: count + 1,\r\n        left: left -1\r\n      }));\r\n    };\r\n    minusClick = () => {\r\n      this.setState(({ count,left }) => ({\r\n        count: count - 1,\r\n        left: left +1\r\n      }));\r\n    };\r\n\r\n    handleChange(e) {\r\n      this.setState({ left: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      document.getElementById(\"findnumrows\").style.display=\"none\";\r\n    }\r\n\r\n    render() {\r\n      const mystyle = {\r\n       display: \"inline-block\",\r\n       border: \"none\",\r\n        color: \"black\",\r\n        backgroundColor: \"gray\",\r\n        padding: \"15px 32px\",\r\n        margin: \"15px\",\r\n\r\n      };\r\n\r\n      return (\r\n      <div>\r\n         <form id=\"findnumrows\" onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"new-todo\">\r\n              Number of Rows?\r\n            </label>\r\n            <input\r\n              id=\"numRowinput\"\r\n              onChange={this.handleChange}\r\n              value={this.state.left}\r\n            />\r\n            <button type=\"submit\">Set Number of Rows </button>\r\n          </form>\r\n        <button style={mystyle} onClick={this.addClick}>+1</button>\r\n        <button style={mystyle} onClick={this.minusClick}>-1</button>\r\n        <p>Rows Completed: {this.state.count}</p>\r\n        <p>Rows Left: {this.state.left}</p>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  class TodoApp extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>Steps to Do</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n\r\n            <label htmlFor=\"new-todo\">\r\n              What needs to be done?\r\n            </label>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button>\r\n              Add #{this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    handleChange(e) {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (this.state.text.length === 0) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  class TodoList extends Component {\r\n    render() {\r\n      return (\r\n        <ul>\r\n          {this.props.items.map(item => (\r\n            <li key={item.id}>{item.text}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default RowActionView;\r\n","C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\PatternSelectScreen.jsx",[],"C:\\Users\\Ananda\\Desktop\\jan2021\\firebasething\\knitwits\\src\\AboutUs.js",["42","43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":19},{"ruleId":"50","severity":1,"message":"54","line":8,"column":8,"nodeType":"52","messageId":"53","endLine":8,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":49,"column":10,"nodeType":"57","endLine":49,"endColumn":40},{"ruleId":"50","severity":1,"message":"58","line":2,"column":17,"nodeType":"52","messageId":"53","endLine":2,"endColumn":30},{"ruleId":"50","severity":1,"message":"59","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":22},{"ruleId":"50","severity":1,"message":"60","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":20},{"ruleId":"50","severity":1,"message":"61","line":17,"column":5,"nodeType":"52","messageId":"53","endLine":17,"endColumn":12},{"ruleId":"62","severity":1,"message":"63","line":57,"column":5,"nodeType":"64","messageId":"65","endLine":59,"endColumn":8},{"ruleId":"50","severity":1,"message":"60","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},{"ruleId":"50","severity":1,"message":"66","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":22},{"ruleId":"50","severity":1,"message":"67","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":19},{"ruleId":"50","severity":1,"message":"68","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":14},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Breadcrumbs' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createContext' is defined but never used.","'SmallContext' is defined but never used.","'makeStyles' is defined but never used.","'partArr' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]