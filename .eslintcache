[{"/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/index.js":"1","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/reportWebVitals.js":"2","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/App.js":"3","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/RowActionView.js":"4","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/small-context.js":"5","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/AboutUs.js":"6","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/PatternSelectScreen.jsx":"7"},{"size":500,"mtime":1612011017000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611970439000,"results":"10","hashOfConfig":"9"},{"size":2631,"mtime":1612058435000,"results":"11","hashOfConfig":"9"},{"size":5227,"mtime":1612060680000,"results":"12","hashOfConfig":"9"},{"size":228,"mtime":1612056925000,"results":"13","hashOfConfig":"9"},{"size":3461,"mtime":1612056386000,"results":"14","hashOfConfig":"9"},{"size":8632,"mtime":1612058638000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dsoqa5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/index.js",[],["34","35"],"/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/reportWebVitals.js",[],"/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/App.js",["36","37","38"],"//import logo from './logo.svg';\nimport './App.css';\nimport PatternSelectScreen from './PatternSelectScreen.jsx';\nimport RowActionView from './RowActionView.js';\nimport { SmallContext } from './small-context.js';\nimport React, { Component } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport AboutUs from './AboutUs.js';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={patternPicked: false, chosenPattern: '', // haha. beefault\n    decideScarf: this.decideScarf.bind(this),\n    decideBee: this.decideBee.bind(this),\n    decidePlushie: this.decidePlushie.bind(this),\n    query:''};\n  }\n\n  decideScarf(){\n    this.setState({patternPicked: true, chosenPattern: 'scarf',\n    query:'https://knitwits.ue.r.appspot.com/api/get/-193436168588079716'});\n    console.log(\"scarf!\");\n  }\n\n  decideBee(){\n    this.setState({patternPicked: true, chosenPattern: 'bee',\n    query:'https://knitwits.ue.r.appspot.com/api/get/-7378964869400283023'});\n    console.log(\"bee!\");\n  }\n\n  decidePlushie(){\n    this.setState({patternPicked: true, chosenPattern: 'plushie',\n    query:'https://knitwits.ue.r.appspot.com/api/get/-4778850897406943288'});\n    console.log(\"plushie!\");\n  }\n\n  render(){\n    const picked = this.state.patternPicked;\n    let view;\n    view = (<PatternSelectScreen/>);\n    if (picked) {view = (<RowActionView/>);}\n\n    return (\n      // <div className=\"App\" style={{backgroundColor:\"wheat\", color:\"#404022\"}}>\n      <div className=\"App\" style={{backgroundColor:\"whitesmoke\", color:\"#404022\"}}>\n        <header className=\"App-header\">\n         <h1> KnitWits </h1>\n         <img src={'./IMG_0069.png'} />\n         {/* <Breadcrumb1 /> */}\n        </header>\n        <SmallContext.Provider value={this.state}>\n          {view}\n        </SmallContext.Provider>\n        <AboutUs />\n    </div>\n  );\n}\n}\n\n// function handleClick(event) {\n//   event.preventDefault();\n//   console.info('You clicked a breadcrumb.');\n// }\n\n// class Breadcrumb1 extends Component {\n  \n//   render() {\n//   return (\n//     <Breadcrumbs aria-label=\"breadcrumb\">\n//       <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\n//         Home\n//       </Link>\n//       {/* <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\n//         Core\n//       </Link> */}\n//       <Link\n//         color=\"textPrimary\"\n//         href=\"/components/breadcrumbs/\"\n//         onClick={handleClick}\n//         aria-current=\"page\"\n//       >\n//         Crochet Bee\n//       </Link>\n//     </Breadcrumbs>\n//   );\n// }\n// }\n\nexport default App;","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/RowActionView.js",["39","40","41","42","43","44","45"],"/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/small-context.js",[],"/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/AboutUs.js",["46","47","48","49","50","51"],"import React, { Component } from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n    \nclass AboutUs extends Component{ \n  \n  render() {\n    const useStyles = makeStyles({\n      root: {\n        maxWidth: 345,\n      },\n      media: {\n        height: 140,\n      },\n    });\n      return (\n        <div>\n          <h2>About Us</h2>\n          <p>Our names are Emily, Sarah, and Ananda and we are the Low Key Influencers! We\n            made this project KnitWits as a nod to a hobby all three of us have leaned on during \n            quarantine, crocheting and knitting.\n          </p>\n          <Card\n      style={{\n        maxWidth: 345,\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fafafa\",\n      }}\n    >\n      <CardMedia style={{ height: \"300px\" }} image={'knitscarf.jpg'} />\n    </Card>\n          {/* <Card className={useStyles.root}>\n          <CardActionArea>\n            <CardMedia\n              className={useStyles.media}\n              image={\"./knit-plush.jpg\"}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Emily\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                across all continents except Antarctica\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card> */}\n\n        {/* <Card className={useStyles.root}>\n          <CardActionArea>\n            <CardMedia\n              className={useStyles.media}\n              image=\"./knit-plush.jpg\"\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Ananda\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                across all continents except Antarctica\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n\n        <Card className={useStyles.root}>\n          <CardActionArea>\n            <CardMedia\n              className={useStyles.media}\n              image=\"./knit-plush.jpg\"\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                Sarah\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                across all continents except Antarctica\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card> */}\n       </div>\n\n    );\n  }\n}\n  \n\n  \n  \n  export default AboutUs;","/Users/sarahabowitz/Documents/Sarah's Folder/IMPORTANT/Codes/git/knitwits/src/PatternSelectScreen.jsx",["52","53"],"import React, { useContext } from 'react';\nimport { SmallContext } from './small-context.js';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n/* design intentionally sucks so when we improve ui it's universal */\nconst images = [\n    {\n      url: './IMG_6903.jpg',\n      title: 'Crochet Bee',\n      width: '40%',\n    },\n    {\n      url: './knitscarf.jpg',\n      title: 'Knit Scarf',\n      width: '30%',\n    },\n    {\n      url: './knit-plush.jpg',\n      title: 'Knit Plush',\n      width: '30%',\n    },\n    {\n        url: './pastel-colors-and-knitting-passion-7-jenny-rainbow.jpg',\n        title: 'Create Your Own Pattern',\n        width: '30%',\n      },\n  ];\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      minWidth: 300,\n      width: '100%',\n    },\n    image: {\n      position: 'relative',\n      height: 200,\n      [theme.breakpoints.down('xs')]: {\n        width: '100% !important', // Overrides inline-style\n        height: 100,\n      },\n      '&:hover, &$focusVisible': {\n        zIndex: 1,\n        '& $imageBackdrop': {\n          opacity: 0.15,\n        },\n        '& $imageMarked': {\n          opacity: 0,\n        },\n        '& $imageTitle': {\n          border: '4px solid currentColor',\n        },\n      },\n    },\n    focusVisible: {},\n    imageButton: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white,\n    },\n    imageSrc: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center 40%',\n    },\n    imageBackdrop: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundColor: theme.palette.common.black,\n      opacity: 0.4,\n      transition: theme.transitions.create('opacity'),\n    },\n    imageTitle: {\n      position: 'relative',\n      padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n      fontFamily: 'Slackey, cursive',\n      textShadow: '2px 2px #000000',\n    },\n    imageMarked: {\n      height: 3,\n      width: 18,\n      backgroundColor: theme.palette.common.white,\n      position: 'absolute',\n      bottom: -2,\n      left: 'calc(50% - 9px)',\n      transition: theme.transitions.create('opacity'),\n    },\n  }));\n  \nconst decide = (decision, myContext) => {\n    switch(decision){\n        case 'scarf':\n            console.log('scarf');\n            myContext.query = 'https://knitwits.ue.r.appspot.com/api/get/-193436168588079716';\n            myContext.decideScarf();\n            break;\n        case 'bee':\n            console.log('bee');\n            myContext.query = 'https://knitwits.ue.r.appspot.com/api/get/-7378964869400283023';\n            myContext.decideBee();\n            break;\n        case 'plushie':\n            console.log('plushie');\n            myContext.query = 'https://knitwits.ue.r.appspot.com/api/get/-4778850897406943288';\n            myContext.decidePlushie();\n            break;\n    }\n}\n\nexport default function PatternSelectScreen(){\n    const myContext=useContext(SmallContext);\n    const classes = useStyles();\n    const emptyDiv={\n        height:'10px',\n        width: '100%',\n    };\n    // okay cool what do i do with my context now\n\n    // return(<div style={{margin:\"10px\"}}>\n    //     <button onClick={myContext.decideScarf} style={{margin:\"10px\"}}>Knit Scarf</button>\n    //     <button onClick={myContext.decideBee}style={{margin:\"10px\"}}>Crochet Bee</button>\n    //     <button onClick={myContext.decidePlushie} style={{margin:\"10px\"}}>Knit Plushie</button>\n    //     <button disabled style={{margin:\"10px\"}}>Custom Pattern</button>\n    //     <form style={{margin:\"10px\"}}>\n    //         <label for=\"custom-code\"style={{margin:\"10px\"}}>Got a custom pattern code? Enter it here:</label>\n    //         <input type=\"text\" id=\"custom-code\" name=\"custom-code\"></input>\n    //         <button style={{margin:\"10px\"}}>Submit</button>\n    //     </form>\n    // </div>)\n\nreturn (\n    <div className={classes.root}>\n    <Grid container spacing={3}>\n        {/* <Grid item xs={6}> */}\n        {/* <div style={emptyDiv}>\n        </div>  */}\n        <Grid item xs={12}>\n        </Grid>\n        {/* Bee */}\n            <ButtonBase\n            focusRipple\n            key={images[0].title}\n            className={classes.image}\n            focusVisibleClassName={classes.focusVisible}\n            style={{\n                 width: images[0].width,\n             \n            }}\n            onClick={() => {myContext.decideBee()}}\n            >\n            <span\n                className={classes.imageSrc}\n                style={{\n                backgroundImage: `url(${images[0].url})`,\n                }}\n            />\n            <span className={classes.imageBackdrop} />\n            <span className={classes.imageButton}>\n                <Typography\n                component=\"span\"\n                variant=\"subtitle1\"\n                color=\"inherit\"\n                className={classes.imageTitle}\n                >\n                {images[0].title}\n                <span className={classes.imageMarked} />\n                </Typography>\n            </span>\n            </ButtonBase>\n        {/* </Grid> */}\n\n        {/* <Grid item xs={6}> */}\n        {/* Scarf */}\n            <ButtonBase\n            focusRipple\n            key={images[1].title}\n            className={classes.image}\n            focusVisibleClassName={classes.focusVisible}\n            style={{\n                width: images[1].width,\n            }}\n            onClick={() => {myContext.decideScarf()}}\n            >\n            <span\n                className={classes.imageSrc}\n                style={{\n                backgroundImage: `url(${images[1].url})`,\n                }}\n            />\n            <span className={classes.imageBackdrop} />\n            <span className={classes.imageButton}>\n                <Typography\n                component=\"span\"\n                variant=\"subtitle1\"\n                color=\"inherit\"\n                className={classes.imageTitle}\n                >\n                {images[1].title}\n                <span className={classes.imageMarked} />\n                </Typography>\n            </span>\n            </ButtonBase>\n        {/* </Grid> */}\n\n        {/* <Grid item xs={6}> */}\n        {/* Knit Plushie */}\n            <ButtonBase\n            focusRipple\n            key={images[2].title}\n            className={classes.image}\n            focusVisibleClassName={classes.focusVisible}\n            style={{\n                width: images[2].width,\n            }}\n            onClick={() => {myContext.decidePlushie()}}\n            >\n            <span\n                className={classes.imageSrc}\n                style={{\n                backgroundImage: `url(${images[2].url})`,\n                }}\n            />\n            <span className={classes.imageBackdrop} />\n            <span className={classes.imageButton}>\n                <Typography\n                component=\"span\"\n                variant=\"subtitle1\"\n                color=\"inherit\"\n                className={classes.imageTitle}\n                >\n                {images[2].title}\n                <span className={classes.imageMarked} />\n                </Typography>\n            </span>\n            </ButtonBase>\n        {/* </Grid> */}\n\n       \n        <div style={emptyDiv}>\n        </div>\n\n        {/* <Grid item xs={6}> */}\n        {/* Custom */}\n            <ButtonBase\n                focusRipple\n                key={images[3].title}\n                className={classes.image}\n                focusVisibleClassName={classes.focusVisible}\n                style={{\n                    width: images[3].width,\n                }}\n                //   onClick={() => {myContext.decidePlushie()}}\n                disabled\n                >\n                <span\n                    className={classes.imageSrc}\n                    style={{\n                    backgroundImage: `url(${images[3].url})`,\n                    }}\n                />\n                <span className={classes.imageBackdrop} />\n                <span className={classes.imageButton}>\n                    <Typography\n                    component=\"span\"\n                    variant=\"subtitle1\"\n                    color=\"inherit\"\n                    className={classes.imageTitle}\n                    >\n                    {images[3].title}\n                    <span className={classes.imageMarked} />\n                    </Typography>\n                </span>\n                </ButtonBase>\n        {/* </Grid>   */}\n\n        < Grid item xs={6}>\n        </Grid>     \n        < Grid item xs={12}>\n        <form style={{margin:\"10px\"}}>\n             <label for=\"custom-code\"style={{margin:\"10px\"}}>Got a custom pattern code? Enter it here:</label>\n             <input type=\"text\" id=\"custom-code\" name=\"custom-code\"></input>\n            <button style={{margin:\"10px\"}}>Submit</button>\n         </form>\n        </Grid>      \n    </Grid>\n        \n\n    </div>\n  );\n}\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":19},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":51,"column":10,"nodeType":"65","endLine":51,"endColumn":40},{"ruleId":"58","severity":1,"message":"66","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":30},{"ruleId":"58","severity":1,"message":"67","line":2,"column":32,"nodeType":"60","messageId":"61","endLine":2,"endColumn":42},{"ruleId":"58","severity":1,"message":"68","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":20},{"ruleId":"58","severity":1,"message":"69","line":27,"column":11,"nodeType":"60","messageId":"61","endLine":27,"endColumn":19},{"ruleId":"58","severity":1,"message":"70","line":44,"column":15,"nodeType":"60","messageId":"61","endLine":44,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":49,"column":11,"nodeType":"73","messageId":"74","endLine":49,"endColumn":15,"fix":"75"},{"ruleId":"76","severity":1,"message":"77","line":56,"column":5,"nodeType":"78","messageId":"79","endLine":58,"endColumn":8},{"ruleId":"58","severity":1,"message":"80","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":22},{"ruleId":"58","severity":1,"message":"81","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":19},{"ruleId":"58","severity":1,"message":"82","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":19},{"ruleId":"58","severity":1,"message":"83","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":14},{"ruleId":"58","severity":1,"message":"84","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":18},{"ruleId":"58","severity":1,"message":"85","line":19,"column":11,"nodeType":"60","messageId":"61","endLine":19,"endColumn":20},{"ruleId":"58","severity":1,"message":"86","line":107,"column":7,"nodeType":"60","messageId":"61","endLine":107,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":108,"column":5,"nodeType":"89","messageId":"90","endLine":124,"endColumn":6},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Breadcrumbs' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createContext' is defined but never used.","'useContext' is defined but never used.","'makeStyles' is defined but never used.","'json_obj' is defined but never used.","'status' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"93","text":"94"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'useStyles' is assigned a value but never used.","'decide' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",[1722,1733],""]
